// Este é o seu arquivo schema.prisma,
// para mais informações consulte a documentação: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             String         @id @default(uuid())
  name           String
  slug           String
  description    String
  avatarImgUrl   String
  coverImageUrl  String
  menuCategories MenuCategory[]
  products       Product[]
  order          Order[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model MenuCategory {
  id           String     @id @default(uuid())
  name         String
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  products     Product[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Product {
  id             String         @id @default(uuid())
  name           String
  description    String
  price          Float
  imageUrl       String
  ingredients    String[]
  restaurant     Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId   String
  menuCategories MenuCategory   @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  OrderProduct   OrderProduct[]
}

model Order {
  id                Int               @id @default(autoincrement())
  total             Float
  status            OrderStatus
  consumptionMethod ConsumptionMethod
  restaurantId      String
  restaurant        Restaurant        @relation(fields: [restaurantId], references: [id])
  orderProduct      OrderProduct[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model OrderProduct {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  IN_PREPARATION
  FINISHED
}

enum ConsumptionMethod {
  TAKEWAY
  DINE_IN
}
